---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  chart:
    spec:
      chart: app-template
      version: 0.1.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  interval: 15m
  values:
    image:
      repository: ghcr.io/onedr0p/jellyfin
      tag: 10.8.4@sha256:63b837c627d740c7965aeba0ec5c83146926c9a60b25890ae75b0c67737d2ac4

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
        - 65539

    # affinity:
      # nodeAffinity:
        # requiredDuringSchedulingIgnoredDuringExecution:
          # nodeSelectorTerms:
            # - matchExpressions:
                # - key: feature.node.kubernetes.io/custom-intel-gpu
                  # operator: In
                  # values:
                    # - "true"

    # dnsConfig:
      # options:
        # - name: ndots
          # value: "1"

    env:
      DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"

    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: "${SVC_JELLYFIN_ADDR}"
        ports:
          http:
            port: 8096

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "jellyfish"
        hosts:
          - host: &host jellyfin.${INGRESS_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "jellyfin-tls"

    persistence:
      config:
        enabled: true
        existingClaim: jellyfin-config
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_SERVER}"
            path: "${NAS_PATH_MEDIA}"
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir

    resources:
      requests:
        cpu: 100m
        gpu.intel.com/i915: 1
        memory: 4282M
      limits:
        gpu.intel.com/i915: 1
        memory: 12G
